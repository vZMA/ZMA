// NOTE: This file uses vanilla Node.js, so no ES6 fancy business, ya hear?!?
const fs = require('fs');
const path = require('path');

// set up file paths
const pofSourceFilePath = path.join(path.resolve(), 'docs/pof/pofSource.json');
const pofOutputDirectory = path.join(path.resolve(), 'docs/pof/generated');
const standardPofOutputPath = path.join(pofOutputDirectory, 'ZMA.pof');
const zmaEramPofOutputPath = path.join(pofOutputDirectory, 'ZMA vERAM.pof');
const miaVstarsPofOutputPath = path.join(pofOutputDirectory, 'MIA vSTARS.pof');
const tpaVstarsPofOutputPath = path.join(pofOutputDirectory, 'TPA vSTARS.pof');
const pbiVstarsPofOutputPath = path.join(pofOutputDirectory, 'PBI vSTARS.pof');
const rswVstarsPofOutputPath = path.join(pofOutputDirectory, 'RSW vSTARS.pof');

// read in source data
const pofSourceFileText = fs.readFileSync(pofSourceFilePath, 'utf-8');
const pofSourceData = JSON.parse(pofSourceFileText);

function writePofFile(pofSourceData, outputPath, useWith, facilityToExcludePrefix) {
    const headerTemplate = ';VERSION: [VERSION]\n;REVISED: [DATE]\n;VARIANT: [VARIANT]\n;\n;***** THIS IS AN AUTOMATICALLY GENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY! *****\n;\n;TO UPDATE POSITIONS IN THIS FILE, EDIT "DOCS/POF/POFSOURCE.JSON", AND RUN\n;"NODE DEVOPS/GENERATEPOFFILES.JS" TO REGENERATE THIS FILE AND ALL OTHER VARIANTS.\n;AMENDMENTS TO POF DATA WILL ONLY CHANGE THE WAY CONTROLLERS APPEAR TO YOU, AND WILL NOT\n;AFFECT THE WAY OTHER CLIENTS SEE YOU, OR THE WAY THAT THEY SEE OTHER CONTROLLERS.\n;\n;POF ENTRIES USE THE FOLLOWING FORMAT:\n;NAME:RNAME:FREQ:SECID:ARTSTAG:CALLPREFIX:CALLSUFFIX:LINE1:LINE2:LSQUAWK:HSQUAWK\n;\n;NAME = SECTOR NAME\n;RNAME = RADIO CALLSIGN\n;FREQ = FREQUENCY MATCH FOR THIS POSITION\n;SECID = SECTOR ID USED FOR HANDOFFS & ATC-ATC COMMS\n;ARTSTAG = POSITION SYMBOL ON THE ARTS SCOPE\n;CALLPREFIX = PREFIX MATCH FOR THIS POSITION\n;CALLSUFFIX = SUFFIX MATCH FOR THIS POSITION\n;LINE1 = FIRST LINE TO DISPLAY ON EACH KEY IN VSCS\n;LINE2 = SECOND LINE TO DISPLAY ON EACH KEY IN VSCS\n;LSQUAWK = LOW END OF SQUAWK RANGE FOR THIS POSITION\n;HSQUAWK = HIGH END OF SQUAWK RANGE FOR THIS POSITION\n\n\n';
    const currentDate = `${new Date().toISOString().substr(0,16).replace('T', ' @ ')}z`;
    const headerText = headerTemplate
        .replace('[VERSION]', pofSourceData.version)
        .replace('[DATE]', currentDate)
        .replace('[VARIANT]', useWith || '(ATC CLIENT NOT SPECIFIED!)');
    const lines = [];

    for (const [facility, data] of Object.entries(pofSourceData)) {
        if (facility === "version") continue;

        const prefix = data.defaultHandoffPrefixForExternalFacilities;

        lines.push(`;${facility} (${prefix})`);

        // assume using 25kHz frequencies (.000 -> .025 -> .050 -> .075)
        for (const [sectorId, sectorData] of Object.entries(data.sectors)) {
            const { networkCallsigns, verbalCallsign, frequency, artsPositionSymbol, callsignPrefixes, callsignSuffixes } = sectorData;
            const freqToSave = frequency > 199.98 ? frequency : `${frequency.toFixed(2)}0`;
            let handoffCode = prefix === '' ? sectorId : `${prefix}${sectorId}`;

            if (facility === facilityToExcludePrefix) {
                handoffCode = sectorId;
            }

            const line = `${networkCallsigns[0]}:${verbalCallsign}:${freqToSave}:${handoffCode}:` +
                `${artsPositionSymbol}:${callsignPrefixes[0]}:${callsignSuffixes[0]}:${callsignPrefixes[0]}:` +
                `${callsignSuffixes[0]}:${data.squawkRange.join(':')}`;

            lines.push(line);

            if (['2', '7'].some((n) => n === String(frequency.toFixed(2)).split('.')[1][1])) {
                lines.push(`    ${line.replace(`${frequency.toFixed(2)}0`, `${frequency.toFixed(2)}5`)}`);
            }
        }

        lines.push('\n');
    }

    const textToWrite = `${headerText}${lines.join('\n')}`;

    fs.writeFileSync(outputPath, textToWrite, 'utf-8');
}

// generate output files
writePofFile(pofSourceData, standardPofOutputPath, 'VRC');
writePofFile(pofSourceData, zmaEramPofOutputPath, 'ZMA vERAM', 'MIA_CTR');
writePofFile(pofSourceData, miaVstarsPofOutputPath, 'MIA vSTARS', 'MIA_APP');
writePofFile(pofSourceData, tpaVstarsPofOutputPath, 'TPA vSTARS', 'TPA_APP');
writePofFile(pofSourceData, pbiVstarsPofOutputPath, 'PBI vSTARS', 'PBI_APP');
writePofFile(pofSourceData, rswVstarsPofOutputPath, 'RSW vSTARS', 'RSW_APP');
